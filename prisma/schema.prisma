generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  cube      String
  userId    Int?
  main      Boolean   @default(false)
  User      User?     @relation(fields: [userId], references: [id])
  solves    Solve[]
  deleted   DateTime?

  @@index([userId])
}

model Solve {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  scramble    String
  time        Int
  status      String    @default("ok")
  description String?   @db.VarChar
  sessionId   Int?
  deleted     DateTime?
  Session     Session?  @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
}

model User {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  email       String        @unique
  firstname   String
  lastname    String
  birthdate   DateTime
  password    String
  role        String        @default("user")
  sessions    Session[]
  UserSession UserSession[]
}

model UserSession {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  token  String @unique @default(uuid())
  userId Int
}
